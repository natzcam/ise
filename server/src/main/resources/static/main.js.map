{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/code/code.component.html","webpack:///./src/app/components/code/code.component.scss","webpack:///./src/app/components/code/code.component.ts","webpack:///./src/app/components/observation/observation.component.html","webpack:///./src/app/components/observation/observation.component.scss","webpack:///./src/app/components/observation/observation.component.ts","webpack:///./src/app/components/patient/patient.component.html","webpack:///./src/app/components/patient/patient.component.scss","webpack:///./src/app/components/patient/patient.component.ts","webpack:///./src/app/components/reference-range/reference-range.component.html","webpack:///./src/app/components/reference-range/reference-range.component.scss","webpack:///./src/app/components/reference-range/reference-range.component.ts","webpack:///./src/app/pipes/name.pipe.ts","webpack:///./src/app/services/error.handler.ts","webpack:///./src/app/services/fhir.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { PatientComponent } from './components/patient/patient.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'patient/:id',\r\n    component: PatientComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n","module.exports = \"<mat-toolbar color=\\\"primary\\\" class=\\\"mat-elevation-z2\\\">\\r\\n  <span>ISE</span>\\r\\n</mat-toolbar>\\r\\n<div fxLayout=\\\"row\\\">\\r\\n  <div class=\\\"patient-list\\\" fxLayout=\\\"column\\\" fxFlex=\\\"20\\\">\\r\\n    <mat-list>\\r\\n      <mat-list-item [routerLink]=\\\"['patient', pt.id]\\\" routerLinkActive=\\\"mat-elevation-z2\\\"\\r\\n        *ngFor=\\\"let pt of (patients | async)\\\">\\r\\n        {{pt.name[0].family}}\\r\\n      </mat-list-item>\\r\\n    </mat-list>\\r\\n  </div>\\r\\n  <div class=\\\"patient-card\\\" fxLayout=\\\"column\\\" fxFlex>\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n</div>\"","module.exports = \".patient-card {\\n  padding: 8px; }\\n\\n.patient-list {\\n  min-width: 150px; }\\n\\n.mat-card-header-text {\\n  margin: 0; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvQzpcXFVzZXJzXFxMTVBILUNhbVxcZGV2XFxpc2VcXGZyb250ZW5kL3NyY1xcYXBwXFxhcHAuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0E7RUFDRSxhQUFZLEVBQ2I7O0FBRUQ7RUFDRSxpQkFBZ0IsRUFDakI7O0FBRUQ7RUFDRSxVQUFTLEVBQ1YiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYWN0aXZlIHtcclxufVxyXG5cclxuLnBhdGllbnQtY2FyZCB7XHJcbiAgcGFkZGluZzogOHB4O1xyXG59XHJcblxyXG4ucGF0aWVudC1saXN0IHtcclxuICBtaW4td2lkdGg6IDE1MHB4O1xyXG59XHJcblxyXG4ubWF0LWNhcmQtaGVhZGVyLXRleHQge1xyXG4gIG1hcmdpbjogMDtcclxufVxyXG4iXX0= */\"","import { Component } from '@angular/core';\r\nimport { fhir } from './models/fhir';\r\nimport { Observable } from 'rxjs';\r\nimport { FhirService } from './services/fhir.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'frontend';\r\n  patients: Observable<fhir.Patient[]>;\r\n\r\n  constructor(fhirService: FhirService) {\r\n    this.patients = fhirService.patient.resources();\r\n  }\r\n}\r\n","import { HttpClientModule } from '@angular/common/http';\r\nimport { ErrorHandler, NgModule } from '@angular/core';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { CodeComponent } from './components/code/code.component';\r\nimport { PatientComponent } from './components/patient/patient.component';\r\nimport { NamePipe } from './pipes/name.pipe';\r\nimport { GlobalErrorHandler } from './services/error.handler';\r\nimport { FhirService } from './services/fhir.service';\r\nimport { ObservationComponent } from './components/observation/observation.component';\r\nimport { ReferenceRangeComponent } from './components/reference-range/reference-range.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    PatientComponent,\r\n    NamePipe,\r\n    CodeComponent,\r\n    ObservationComponent,\r\n    ReferenceRangeComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    FlexLayoutModule,\r\n    MatListModule,\r\n    MatToolbarModule,\r\n    MatListModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatSnackBarModule,\r\n    MatIconModule,\r\n    MatTableModule\r\n  ],\r\n  providers: [\r\n    FhirService,\r\n    {\r\n      provide: ErrorHandler,\r\n      useClass: GlobalErrorHandler\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","module.exports = \"<span *ngFor=\\\"let coding of code?.coding\\\">{{coding.display}}</span>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY29kZS9jb2RlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { fhir } from 'src/app/models/fhir';\r\n\r\n@Component({\r\n  selector: 'app-code',\r\n  templateUrl: './code.component.html',\r\n  styleUrls: ['./code.component.scss']\r\n})\r\nexport class CodeComponent implements OnInit {\r\n  @Input()\r\n  code: fhir.CodeableConcept;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n","module.exports = \"<mat-card>\\r\\n  <mat-card-content>\\r\\n    <app-code [code]=\\\"observation?.code\\\"></app-code>\\r\\n    <table mat-table [dataSource]=\\\"component\\\">\\r\\n      <ng-container matColumnDef=\\\"result\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Value</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n          {{element.valueQuantity.value}}\\r\\n          <span class=\\\"unit\\\">{{element.valueQuantity.unit}}</span></td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"interpretation\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>\\r\\n          <span class=\\\"header\\\">Interpretation</span>\\r\\n        </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n          <app-code *ngFor=\\\"let inter of element.interpretation\\\" [code]=\\\"inter\\\"></app-code>\\r\\n        </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"reference\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Reference </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n          <app-reference-range *ngFor=\\\"let range of element.referenceRange\\\" [range]=\\\"range\\\"></app-reference-range>\\r\\n        </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"['result','interpretation', 'reference']\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let row; columns: ['result','interpretation', 'reference'];\\\"></tr>\\r\\n    </table>\\r\\n  </mat-card-content>\\r\\n</mat-card>\"","module.exports = \".unit {\\n  font-style: italic;\\n  font-size: 80%; }\\n\\n.mat-table {\\n  width: 100%; }\\n\\napp-code {\\n  margin: 0 8px; }\\n\\n.header {\\n  margin: 0 8px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9vYnNlcnZhdGlvbi9DOlxcVXNlcnNcXExNUEgtQ2FtXFxkZXZcXGlzZVxcZnJvbnRlbmQvc3JjXFxhcHBcXGNvbXBvbmVudHNcXG9ic2VydmF0aW9uXFxvYnNlcnZhdGlvbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG1CQUFrQjtFQUNsQixlQUFjLEVBQ2Y7O0FBRUQ7RUFDRSxZQUFXLEVBQ1o7O0FBRUQ7RUFDRSxjQUFhLEVBQ2Q7O0FBRUQ7RUFDRSxjQUFhLEVBQ2QiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL29ic2VydmF0aW9uL29ic2VydmF0aW9uLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnVuaXQge1xyXG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcclxuICBmb250LXNpemU6IDgwJTtcclxufVxyXG5cclxuLm1hdC10YWJsZSB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbmFwcC1jb2RlIHtcclxuICBtYXJnaW46IDAgOHB4O1xyXG59XHJcblxyXG4uaGVhZGVyIHtcclxuICBtYXJnaW46IDAgOHB4O1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit, Input, ViewEncapsulation } from '@angular/core';\r\nimport { fhir } from 'src/app/models/fhir';\r\n\r\n@Component({\r\n  selector: 'app-observation',\r\n  templateUrl: './observation.component.html',\r\n  styleUrls: ['./observation.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ObservationComponent implements OnInit {\r\n  private _observation: fhir.Observation;\r\n  component: fhir.BackboneElement[];\r\n\r\n  constructor() {}\r\n\r\n  @Input()\r\n  set observation(value: fhir.Observation) {\r\n    this._observation = value;\r\n    this.component = value.component ? value.component : [value];\r\n  }\r\n\r\n  get observation(): fhir.Observation {\r\n    return this._observation;\r\n  }\r\n\r\n  ngOnInit() {}\r\n}\r\n","module.exports = \"<mat-card *ngIf=\\\"patient$ | async as patient\\\">\\r\\n  <mat-card-header>\\r\\n    <mat-card-title>{{patient | name}}</mat-card-title>\\r\\n    <mat-card-subtitle>{{patient.birthDate | date}} {{patient.gender | uppercase}}</mat-card-subtitle>\\r\\n  </mat-card-header>\\r\\n  <mat-card-content>\\r\\n    <app-observation class=\\\"observation\\\" [observation]=\\\"obs\\\" *ngFor=\\\"let obs of (observations$ | async)\\\">\\r\\n    </app-observation>\\r\\n  </mat-card-content>\\r\\n</mat-card>\"","module.exports = \".observation {\\n  margin: 8px;\\n  min-height: 50px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9wYXRpZW50L0M6XFxVc2Vyc1xcTE1QSC1DYW1cXGRldlxcaXNlXFxmcm9udGVuZC9zcmNcXGFwcFxcY29tcG9uZW50c1xccGF0aWVudFxccGF0aWVudC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFlBQVc7RUFDWCxpQkFBZ0IsRUFDakIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL3BhdGllbnQvcGF0aWVudC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5vYnNlcnZhdGlvbiB7XHJcbiAgbWFyZ2luOiA4cHg7XHJcbiAgbWluLWhlaWdodDogNTBweDtcclxufVxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { iif, Observable, of, merge } from 'rxjs';\r\nimport { map, mergeMap, switchMap, tap } from 'rxjs/operators';\r\nimport { fhir } from 'src/app/models/fhir';\r\nimport { FhirService } from 'src/app/services/fhir.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { webSocket } from 'rxjs/webSocket';\r\n\r\n@Component({\r\n  selector: 'app-patient',\r\n  templateUrl: './patient.component.html',\r\n  styleUrls: ['./patient.component.scss']\r\n})\r\nexport class PatientComponent implements OnInit {\r\n  patient$: Observable<fhir.Patient>;\r\n  subscription$: Observable<fhir.Subscription>;\r\n  observations$: Observable<fhir.Observation[]>;\r\n\r\n  constructor(private route: ActivatedRoute, private fhirService: FhirService) {\r\n    this.patient$ = route.params.pipe(\r\n      switchMap(params => fhirService.patient.read(params.id))\r\n    );\r\n\r\n    // triggered when patient id changes\r\n    const patientIdChanged$ = route.params;\r\n\r\n    // triggered when websocket ping is received from a subscription\r\n    // https://www.hl7.org/fhir/subscription.html#2.46.7.2\r\n    const webSocketPing$ = route.params.pipe(\r\n      // find subscription for the patient\r\n      switchMap(params =>\r\n        fhirService.subscription\r\n          .search(\r\n            {\r\n              criteria: 'Observation?subject=Patient/' + params.id\r\n            },\r\n            { 'Cache-Control': 'no-cache' }\r\n          )\r\n          .pipe(\r\n            map(bundle => [\r\n              params.id,\r\n              bundle.total === 0 ? null : bundle.entry[0].resource\r\n            ])\r\n          )\r\n      ),\r\n      mergeMap(result =>\r\n        iif(\r\n          () => result[1] === null,\r\n          // if none, then create one\r\n          fhirService.subscription.create({\r\n            criteria: 'Observation?subject=Patient/' + result[0],\r\n            status: 'active',\r\n            reason: 'test',\r\n            channel: {\r\n              type: 'websocket',\r\n              payload: 'application/json'\r\n            }\r\n          }),\r\n          of(result[1])\r\n        )\r\n      ),\r\n      switchMap(sub => {\r\n        const websocket$ = webSocket({\r\n          url: environment.fhir_ws_url,\r\n          serializer: (value: string) => value,\r\n          deserializer: (e: MessageEvent) => e.data\r\n        });\r\n        websocket$.next('bind ' + sub.id);\r\n        return websocket$;\r\n      })\r\n    );\r\n\r\n    this.observations$ = merge(patientIdChanged$, webSocketPing$).pipe(\r\n      tap(console.log),\r\n      switchMap(_ =>\r\n        fhirService.observation.resources(\r\n          {\r\n            subject: 'Patient/' + route.snapshot.params.id\r\n          }\r\n        )\r\n      )\r\n    );\r\n  }\r\n\r\n  ngOnInit() {}\r\n}\r\n","module.exports = \"<span>{{rangeText}}</span>\\r\\n<span *ngIf=\\\"ageText\\\"> / age: {{ageText}}</span>\\r\\n<span>{{text}}</span>\"","module.exports = \"span {\\n  font-size: 80%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9yZWZlcmVuY2UtcmFuZ2UvQzpcXFVzZXJzXFxMTVBILUNhbVxcZGV2XFxpc2VcXGZyb250ZW5kL3NyY1xcYXBwXFxjb21wb25lbnRzXFxyZWZlcmVuY2UtcmFuZ2VcXHJlZmVyZW5jZS1yYW5nZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGVBQWMsRUFDZiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcmVmZXJlbmNlLXJhbmdlL3JlZmVyZW5jZS1yYW5nZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbInNwYW4ge1xyXG4gIGZvbnQtc2l6ZTogODAlO1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-reference-range',\r\n  templateUrl: './reference-range.component.html',\r\n  styleUrls: ['./reference-range.component.scss']\r\n})\r\nexport class ReferenceRangeComponent implements OnInit {\r\n  _range: any;\r\n  text;\r\n  rangeText;\r\n  ageText;\r\n\r\n  constructor() {}\r\n\r\n  @Input()\r\n  set range(range: any) {\r\n    this._range = range;\r\n    this.text = range.text;\r\n    this.rangeText = this.constructRangeText(range);\r\n\r\n    if (range.age) {\r\n      this.ageText = this.constructRangeText(range.age);\r\n    }\r\n  }\r\n\r\n  get range(): any {\r\n    return this._range;\r\n  }\r\n\r\n  constructRangeText(range) {\r\n    return [\r\n      range.low ? range.low.value : null,\r\n      range.high ? range.high.value : null\r\n    ]\r\n      .filter(val => val !== null)\r\n      .join(' - ');\r\n  }\r\n\r\n  ngOnInit() {}\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { fhir } from '../models/fhir';\r\n\r\n@Pipe({\r\n  name: 'name'\r\n})\r\nexport class NamePipe implements PipeTransform {\r\n  transform(patient: fhir.Patient, args?: any): any {\r\n    const name: fhir.HumanName = patient.name[0];\r\n    return name.family + ', ' + name.given.join(' ');\r\n  }\r\n}\r\n","import { Injectable, ErrorHandler } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Injectable()\r\nexport class GlobalErrorHandler implements ErrorHandler {\r\n  constructor(private snackBar: MatSnackBar) {}\r\n\r\n  handleError(error) {\r\n    this.snackBar.open(error.message, 'OK', {\r\n      duration: 5000,\r\n      horizontalPosition: 'center',\r\n      verticalPosition: 'top'\r\n    });\r\n    throw error;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { fhir } from '../models/fhir';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map, tap, filter } from 'rxjs/operators';\r\n\r\nclass Resource<T> {\r\n  constructor(private type: string, private http: HttpClient) {}\r\n\r\n  search(query?: any, headers?: any): Observable<fhir.Bundle> {\r\n    return this.http.get<fhir.Bundle>(`${environment.fhir_url}/${this.type}`, {\r\n      params: query,\r\n      headers: headers\r\n    });\r\n  }\r\n\r\n  // return resources as list, without all the metadata\r\n  resources(query?: any, headers?: any): Observable<T[]> {\r\n    return this.http\r\n      .get<fhir.Bundle>(`${environment.fhir_url}/${this.type}`, {\r\n        params: query,\r\n        headers: headers\r\n      })\r\n      .pipe(\r\n        filter(bundle => bundle.total > 0),\r\n        map((bundle: any) => bundle.entry.map(entry => entry.resource))\r\n      );\r\n  }\r\n\r\n  read(id): Observable<T> {\r\n    return this.http.get<T>(`${environment.fhir_url}/${this.type}/${id}`);\r\n  }\r\n\r\n  create(resource): Observable<T> {\r\n    if (!resource.resourceType) {\r\n      resource.resourceType = this.type;\r\n    }\r\n    return this.http.post<T>(`${environment.fhir_url}/${this.type}`, resource);\r\n  }\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FhirService {\r\n  constructor(private http: HttpClient) {}\r\n  patient = new Resource<fhir.Patient>('Patient', this.http);\r\n  subscription = new Resource<fhir.Subscription>('Subscription', this.http);\r\n  observation = new Resource<fhir.Observation>('Observation', this.http);\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  fhir_url: 'http://localhost:8888/fhir',\r\n  fhir_ws_url: 'ws://localhost:8888/websocket'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import 'hammerjs';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}